image: docker:20.10.16  # Utiliser une image avec Docker installé

services:
  - docker:20.10.16-dind  # Utiliser docker-in-docker

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""  # Désactiver TLS pour simplifier
  CI_REGISTRY: "wvm-srv7.luminy.univ-amu.fr:5050"
  BACKEND_IMAGE: "$CI_REGISTRY/spoofy/secure_directory_backend"
  FRONTEND_IMAGE: "$CI_REGISTRY/spoofy/secure_directory_frontend"

stages:
  - test
  - build
  - push
  - deploy

before_script:
  - echo "Connexion à la registry GitLab..."
  - docker login $CI_REGISTRY -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  - mkdir -p ~/.ssh
  - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
  - chmod 600 ~/.ssh/id_ed25519
  - eval $(ssh-agent -s)
  - ssh-add ~/.ssh/id_ed25519
  - ssh-keyscan 139.124.86.159 >> ~/.ssh/known_hosts

# Étape 1: Test Backend
test-backend:
  image: maven:3.9.6-eclipse-temurin-21  # Utiliser Maven pour les tests
  stage: test
  script:
    - echo "Exécution des tests backend..."
    - cd secure-directory
    - mvn test
  only:
    - main

# Étape 2: Build Backend
build-backend:
  image: maven:3.9.6-eclipse-temurin-21  # Utiliser Maven pour la compilation
  stage: build
  script:
    - echo "Compilation du backend..."
    - cd secure-directory
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - secure-directory/target/*.jar
  only:
    - main

# Étape 3: Build Docker Image Backend
docker-build-backend:
  stage: build
  script:
    - echo "Construction de l'image Docker backend..."
    - cd secure-directory
    - docker build -t $BACKEND_IMAGE .
  only:
    - main

# Étape 4: Push Docker Image Backend
docker-push-backend:
  stage: push
  script:
    - echo "Pushing de l'image Docker backend..."
    - docker push $BACKEND_IMAGE
  only:
    - main

# Étape 5: Build Docker Image Frontend
docker-build-frontend:
  stage: build
  script:
    - echo "Construction de l'image Docker frontend..."
    - cd frontend
    - docker build -t $FRONTEND_IMAGE .
  only:
    - main

# Étape 6: Push Docker Image Frontend
docker-push-frontend:
  stage: push
  script:
    - echo "Pushing de l'image Docker frontend..."
    - docker push $FRONTEND_IMAGE
  only:
    - main

# Étape 7: Déploiement sur la VM
deploy:
  stage: deploy
  script:
    - echo "Déploiement en cours sur la VM..."
    - scp docker-compose.yml projet@139.124.86.159:~/secure_directory/
    - ssh projet@139.124.86.159 "cd ~/secure_directory && docker-compose down && docker-compose up -d"
  only:
    - main